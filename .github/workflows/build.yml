on:
  workflow_call:
    inputs:
      host:
        required: true
        type: string
      if:
        description: 'Whether to run this job'
        required: false
        default: true
        type: boolean
      publish:
        required: false
        type: string
      setup:
        required: false
        type: string
      target:
        required: true
        type: string
jobs:
  reusable-build:
    if: ${{ inputs.if }}
    name: stable - ${{ inputs.target }} - python@3.12
    runs-on: ${{ inputs.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ inputs.target }}-cargo-${{ inputs.host }}
      - name: Install Bindgen
        run: |
          cargo install --force --locked bindgen-cli
      - name: Install zig
        uses: mlugg/setup-zig@v1
        if: ${{ inputs.target == 'armv7-unknown-linux-gnueabihf' }}
        with:
          version: 0.13.0
      - name: Setup toolchain
        run: ${{ inputs.setup }}
        if: ${{ inputs.setup }}
        shell: bash
      - name: Install nasm for i686-pc-windows-msvc
        uses: ilammy/setup-nasm@v1
        if: inputs.target == 'i686-pc-windows-msvc'
      - name: Setup x86 Python for i686-pc-windows-msvc
        if: ${{ inputs.target == 'i686-pc-windows-msvc' }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x86"
      - name: Build Python Extension Module
        if: ${{ inputs.publish != true }}
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ inputs.target }}
          # builds in release mode with the specified python version as the interpreter and the Cargo.toml file as the manifest
          args: --release -i python3.12 -m Cargo.toml
      - name: Publish to PyPI
        if: ${{ inputs.publish == true }}
        uses: PyO3/maturin-action@v1
        with:
          command: publish
          target: ${{ inputs.target }}
          args: --no-sdist -i python3.12 -m Cargo.toml -u __token__ -p ${{ secrets.MATURIN_PASSWORD }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ inputs.target }}
          path: target/wheels/*.whl # path to the python wheel package
          if-no-files-found: error
